#pragma once

// --------------------------------------------------------------------> START
// * INCLUDES
// ---------------------------------------------------------------------------
// Built-in includes

// Libraries includes
#include <gmock/gmock.h>

// Qt framework includes

// Project includes
// <---------------------------------------------------------------------- END

// --------------------------------------------------------------------> START
// * CLASSES DECLARATION
// ---------------------------------------------------------------------------

// <---------------------------------------------------------------------- END

class MockIDummy
{
public:
    // ***********************************************************************
    // * PUBLIC FUNCTIONS
    // ***********************************************************************
    virtual ~MockIDummy() = default;

    MOCK_METHOD(void, work, ());

    static std::shared_ptr<MockIDummy> create()
    {
        return std::shared_ptr<::testing::StrictMock<MockIDummy>>();
    }
    // ***********************************************************************
    // * PUBLIC VARIABLES
    // ***********************************************************************

protected:
    // ***********************************************************************
    // * PROTECTED FUNCTIONS
    // ***********************************************************************

    // ***********************************************************************
    // * PROTECTED VARIABLES
    // ***********************************************************************

private:
    // ***********************************************************************
    // * PRIVATE FUNCTIONS
    // ***********************************************************************

    // ***********************************************************************
    // * PRIVATE VARIABLES
    // ***********************************************************************
};
